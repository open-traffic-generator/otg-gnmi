# Build workflow does the following:
#   - checkout all files
#   - get the latest version number
#   - setup python 3.x env
#   - install python dependencies
#   - build python distributions
#   - create a tag and release
#   - upload assets to the release
#   - upload assets to pypi

name: Build

on: [push, pull_request, workflow_dispatch, repository_dispatch]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade -r requirements.txt
      
      - name: Build and Test
        run: |
          python -m pytest --junitxml="tests/results.xml"
      
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: tests/results.xml

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push to DockerHub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./ 
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: otgservices/otg-gnmi-server:0.0.2
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: otgservices/otg-gnmi-server/0.0.2
          tag_with_ref: true

    